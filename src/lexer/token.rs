#[allow(non_snake_case)]
#[macro_export]
macro_rules! Token {
    [abstract]    => { $crate::lexer::ast::Abstract };
    [as]          => { $crate::lexer::ast::As };
    [async]       => { $crate::lexer::ast::Async };
    [auto]        => { $crate::lexer::ast::Auto };
    [await]       => { $crate::lexer::ast::Await };
    [become]      => { $crate::lexer::ast::Become };
    [box]         => { $crate::lexer::ast::Box };
    [break]       => { $crate::lexer::ast::Break };
    [const]       => { $crate::lexer::ast::Const };
    [continue]    => { $crate::lexer::ast::Continue };
    [crate]       => { $crate::lexer::ast::Crate };
    [default]     => { $crate::lexer::ast::Default };
    [do]          => { $crate::lexer::ast::Do };
    [dyn]         => { $crate::lexer::ast::Dyn };
    [else]        => { $crate::lexer::ast::Else };
    [enum]        => { $crate::lexer::ast::Enum };
    [extern]      => { $crate::lexer::ast::Extern };
    [final]       => { $crate::lexer::ast::Final };
    [fn]          => { $crate::lexer::ast::Fn };
    [for]         => { $crate::lexer::ast::For };
    [if]          => { $crate::lexer::ast::If };
    [impl]        => { $crate::lexer::ast::Impl };
    [in]          => { $crate::lexer::ast::In };
    [let]         => { $crate::lexer::ast::Let };
    [loop]        => { $crate::lexer::ast::Loop };
    [macro]       => { $crate::lexer::ast::Macro };
    [match]       => { $crate::lexer::ast::Match };
    [mod]         => { $crate::lexer::ast::Mod };
    [move]        => { $crate::lexer::ast::Move };
    [mut]         => { $crate::lexer::ast::Mut };
    [override]    => { $crate::lexer::ast::Override };
    [priv]        => { $crate::lexer::ast::Priv };
    [pub]         => { $crate::lexer::ast::Pub };
    [ref]         => { $crate::lexer::ast::Ref };
    [return]      => { $crate::lexer::ast::Return };
    [Self]        => { $crate::lexer::ast::SelfType };
    [self]        => { $crate::lexer::ast::SelfValue };
    [static]      => { $crate::lexer::ast::Static };
    [struct]      => { $crate::lexer::ast::Struct };
    [super]       => { $crate::lexer::ast::Super };
    [trait]       => { $crate::lexer::ast::Trait };
    [try]         => { $crate::lexer::ast::Try };
    [type]        => { $crate::lexer::ast::Type };
    [typeof]      => { $crate::lexer::ast::Typeof };
    [union]       => { $crate::lexer::ast::Union };
    [unsafe]      => { $crate::lexer::ast::Unsafe };
    [unsized]     => { $crate::lexer::ast::Unsized };
    [use]         => { $crate::lexer::ast::Use };
    [virtual]     => { $crate::lexer::ast::Virtual };
    [where]       => { $crate::lexer::ast::Where };
    [while]       => { $crate::lexer::ast::While };
    [yield]       => { $crate::lexer::ast::Yield };
    [&]           => { $crate::lexer::ast::And };
    [&&]          => { $crate::lexer::ast::AndAnd };
    [&=]          => { $crate::lexer::ast::AndEq };
    [@]           => { $crate::lexer::ast::At };
    [^]           => { $crate::lexer::ast::Caret };
    [^=]          => { $crate::lexer::ast::CaretEq };
    [:]           => { $crate::lexer::ast::Colon };
    [,]           => { $crate::lexer::ast::Comma };
    [$]           => { $crate::lexer::ast::Dollar };
    [.]           => { $crate::lexer::ast::Dot };
    [..]          => { $crate::lexer::ast::DotDot };
    [...]         => { $crate::lexer::ast::DotDotDot };
    [..=]         => { $crate::lexer::ast::DotDotEq };
    [=]           => { $crate::lexer::ast::Eq };
    [==]          => { $crate::lexer::ast::EqEq };
    [=>]          => { $crate::lexer::ast::FatArrow };
    [>=]          => { $crate::lexer::ast::Ge };
    [>]           => { $crate::lexer::ast::Gt };
    [<-]          => { $crate::lexer::ast::LArrow };
    [<=]          => { $crate::lexer::ast::Le };
    [<]           => { $crate::lexer::ast::Lt };
    [-]           => { $crate::lexer::ast::Minus };
    [-=]          => { $crate::lexer::ast::MinusEq };
    [!=]          => { $crate::lexer::ast::Ne };
    [!]           => { $crate::lexer::ast::Not };
    [|]           => { $crate::lexer::ast::Or };
    [|=]          => { $crate::lexer::ast::OrEq };
    [||]          => { $crate::lexer::ast::OrOr };
    [::]          => { $crate::lexer::ast::PathSep };
    [%]           => { $crate::lexer::ast::Percent };
    [%=]          => { $crate::lexer::ast::PercentEq };
    [+]           => { $crate::lexer::ast::Plus };
    [+=]          => { $crate::lexer::ast::PlusEq };
    [#]           => { $crate::lexer::ast::Pound };
    [?]           => { $crate::lexer::ast::Question };
    [->]          => { $crate::lexer::ast::RArrow };
    [;]           => { $crate::lexer::ast::Semi };
    [<<]          => { $crate::lexer::ast::Shl };
    [<<=]         => { $crate::lexer::ast::ShlEq };
    [>>]          => { $crate::lexer::ast::Shr };
    [>>=]         => { $crate::lexer::ast::ShrEq };
    [/]           => { $crate::lexer::ast::Slash };
    [/=]          => { $crate::lexer::ast::SlashEq };
    [*]           => { $crate::lexer::ast::Star };
    [*=]          => { $crate::lexer::ast::StarEq };
    [~]           => { $crate::lexer::ast::Tilde };
    [_]           => { $crate::lexer::ast::Underscore };
}
